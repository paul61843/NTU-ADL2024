# -*- coding: utf-8 -*-

from transformers import AutoTokenizer, AutoModelForMultipleChoice
import torch

# 這裡用你的 output_dir 路徑
model_path = "./output/swag_no_trainer"

tokenizer = AutoTokenizer.from_pretrained(model_path)
model = AutoModelForMultipleChoice.from_pretrained(model_path, trust_remote_code=True)
model.eval()

# 假設你有一題：
# 問題前綴 (context): "他走進了房間並..."
# 四個選項 (endings):
question = "在關西鎮以什麼方言為主？"
endings = [
    '隨著解嚴以來政治上的自由化與民主化，以泛藍與泛綠為首的政黨政治、統一與獨立議題、以及公民社會的形成，臺灣逐漸脫離過往戒嚴時代形塑的大中國史觀，發展出以臺灣為中心的多元文化主義，使得臺灣文化呈現多元並立、兼容並蓄的面貌。臺灣荷蘭統治時期臺灣被稱作「Taivoan」，但明鄭時期捨棄荷治時期使用的「大員」名稱，將臺灣稱為「東都」、「東寧」。納入清朝版圖後，清朝改以「臺灣」設置臺灣府，「臺灣」遂成為此島嶼的稱呼。除此之外，臺灣亦有「寶島」、「鯤島」、「蓬萊」、「福爾摩沙」、「福摩薩」、「高砂」等別稱。臺灣又稱為「福爾摩沙」，源自葡萄牙語「Formosa」，意為「美麗島」。在1544年當時葡萄牙船隻在經過臺灣海面時，水手從海上遠望臺灣，發現臺灣甚為美麗，於是高呼「Ilha Formosa」，葡萄牙語的「Formosa」為「美麗」之意，「Ilha」則為「島嶼」，故翻譯為美麗島。但此說法尚無直接與明確的證據。在1950年代前是歐洲國家對臺灣的主要稱呼。歐洲亦因此曾長期稱臺灣海峽為福爾摩沙海峽。',
    '新竹縣人口約54萬人，居民以海陸腔客家人為主，閩南人、外省人及原住民為少數，近30年來由於新竹科學園區的發展，也吸引許多外來人口移居。新竹縣目前有中國科技大學新竹校區、明新科技大學、大華科技大學、中華科技大學新竹校區5所大專院校。另外有國立竹東高中、國立竹北高中、、國立關西高中、縣立湖口高中、縣立六家高中、內思高工、忠信高中、東泰高中、義民高中、仰德高中等高中職校。新竹縣在語文閱讀方面也極為推動及重視，曾舉辦過中華民國92年全國語文競賽重大賽事。台灣高鐵穿越本縣，新竹車站設置於竹北市。台鐵縱貫線、六家線、內灣線都有在本縣設站。自2007年3月1日起因興建六家線，內灣線的新竹-竹東間列車停駛4年8個月，內灣線因為六家線完工已於2011年11月11日恢復通車。',
    '新竹縣是中華民國臺灣省的縣，位於臺灣本島西北部，北臨桃園市，南接苗栗縣，東南以雪山山脈與宜蘭縣、臺中市相連，西部面向台灣海峽，西接與新竹市交界。全縣總面積約1,427平方公里，除鳳山溪、頭前溪中下游沖積平原外，其餘大多為丘陵、台地及山地。早期新竹縣郊區多務農，1970年代工業技術研究院創設於新竹市，1980年代新竹科學工業園區設立於新竹市東區及新竹縣寶山鄉，1990年代位於湖口鄉的新竹工業區也逐漸從傳統產業聚落轉型為新興高科技產業聚落，使得新竹縣成為北台灣的高科技產業重鎮，而人口也在近幾年急速增加。本縣方言於絕大部分地區使用海陸客家話，竹北市及新豐鄉沿海地區部分使用泉州腔閩南話較多，關西鎮及峨眉鄉部分使用四縣腔客家話為主。',
    '開發區依照產業重點的不同分為經濟開發區、經濟技術開發區、工業區等類型，此外還有產業園或工業園、科技園相對專業的區域等，多附屬於開發區。開發區為中國大陸地區推行「改革開放」以來設置最多的經濟區。按照所設層次的不同，分為國家級、省級、縣級三種主要類型，很多鄉鎮也設有開發區。為便於管理，開發區劃定的區域多為地級行政區範圍內跨縣級行政區的區域，或一個縣級行政區範圍劃定的區域，這類開發區以國家級或省級開發區為主；縣級行政區範圍劃定的開發區則以縣級開發區為主，在一個鄉鎮內或跨越鄉鎮劃定區域；鄉鎮一級設立的開發區多跨行政村劃定區域，或一個行政村範圍內劃定區域。',
]

# 轉成模型輸入格式（每個選項與前綴組合）
inputs = tokenizer(
    [question] * 4, 
    endings, 
    return_tensors="pt", 
    padding=True, 
    truncation=True
)

# 加上 batch 維度
for k in inputs:
    inputs[k] = inputs[k].unsqueeze(0)  # shape: (1, 4, seq_len)

with torch.no_grad():
    outputs = model(**inputs)
    logits = outputs.logits  # shape: (1, 4)
    predicted_class = torch.argmax(logits, dim=1).item()

print(f"模型預測選項: {predicted_class}, 對應內容: {endings[predicted_class]}")
